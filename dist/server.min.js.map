{"version":3,"sources":["server.js"],"names":["require","Server","module","exports","res","socket","server","io","console","log","on","data","Date","toLocaleTimeString","time","username","message","to","room","emit","leave","join","end"],"mappings":"0BAAmBA,QAAQ,aAAnBC,gBAAAA,OAERC,OAAOC,QAFYH,SAAAA,EAAQI,GAGzB,IAHMH,EAGGI,OAAOC,OAHVL,GAGqB,CACzB,IAAMM,EAAK,IAAIN,OAAOG,EAAIC,OAAOC,QADnCC,EAAKH,GAAG,aAAH,SAAkBG,GACrBC,QAAWC,IAAIR,oBAMbI,EAAOK,GAAG,cAAe,SAACC,GAA1BN,IAAOK,GAAG,IAAAE,MAAeC,qBACvBR,EAAMS,KAAO,iBAAWD,CACxBR,SAAYM,EAAAI,SACVA,QAAQJ,EAAMK,QACdA,KAAAA,IAKFT,EAAGU,GAAGN,EAAKO,MAAMC,KAAK,iBAAkB,CACtCJ,SAAUJ,EAAKI,SACfC,QAASL,EAAKK,QACdF,KAAMA,MAMRT,EAAAA,GAAOe,aAAP,SAAAF,GACAb,EAAOe,MAAM,UACbf,EAAOgB,MAAKH,WAHdb,EAMAgB,KAAAH,KAGCb,EAFDK,GAAA,aAAA,WA5BFF,QAAAC,IAAA,yBAmCFL,EAAIkB,OAAJhB,OAAAC,GAAAA,EAAAH,EAAIkB","file":"server.min.js","sourcesContent":["const { Server } = require(\"socket.io\");\r\n\r\nmodule.exports = (req, res) => {\r\n  if (!res.socket.server.io) {\r\n    const io = new Server(res.socket.server);\r\n\r\n    io.on(\"connection\", (socket) => {\r\n      console.log(\"A user connected\");\r\n\r\n      // Handle sending a message\r\n      socket.on(\"sendMessage\", (data) => {\r\n        const time = new Date().toLocaleTimeString();\r\n        socket.emit(\"receiveMessage\", {\r\n          username: data.username,\r\n          message: data.message,\r\n          time: time,\r\n        });\r\n\r\n        // Broadcast to all clients in the same room\r\n        io.to(data.room).emit(\"receiveMessage\", {\r\n          username: data.username,\r\n          message: data.message,\r\n          time: time,\r\n        });\r\n      });\r\n\r\n      // Room handling (optional)\r\n      socket.on(\"switchRoom\", (room) => {\r\n        socket.leave(\"public\");\r\n        socket.leave(\"private\");\r\n        socket.join(room);\r\n      });\r\n\r\n      // User disconnecting\r\n      socket.on(\"disconnect\", () => {\r\n        console.log(\"User disconnected\");\r\n      });\r\n    });\r\n\r\n    res.socket.server.io = io;  // Store the reference to the WebSocket server\r\n  }\r\n  res.end();\r\n};\r\n\r\n"]}