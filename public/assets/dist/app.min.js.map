{"version":3,"sources":["app.js"],"names":["socket","io","document","getElementById","addEventListener","e","message","value","username","emit","room","on","data","messageContainer","createElement","messageElement","concat","time","innerHTML","appendChild","scrollHeight"],"mappings":"aAAA,IAAMA,OAASC,KAGfC,SAASC,eAAe,aAAaC,iBAAiB,SAAU,SAACC,GAAjEH,EAAAA,iBAGE,IAAMI,EAAUJ,SAASC,eAAe,WAAWI,MAC7CC,EAAWN,SAASC,eAAe,YAAYI,MAGrDP,OAAOS,KAAK,cAAe,CAAAD,SAAAA,EAAAF,QAAAA,EAAAI,KAFd,WAE0BJ,SAAOH,eAAnB,WAAAI,MAAA,KAG5BP,OAEDW,GAAA,iBAAA,SAAAC,GAEE,IAAMC,EAAmBX,SAASC,eAAe,YAD5CQ,EAAGT,SAAkBY,cAAU,OAEpCC,EAAMA,UAAN,WAAAC,OAAgCF,EAATN,SAAvB,eAAAQ,OAAAJ,EAAAK,KAAA,OAAAD,OAAAJ,EAAAN,SAEAS,EAAeG,YAAfH,GACAF,EAAiBM,UAAYJ,EAA7BK","file":"app.min.js","sourcesContent":["const socket = io();\r\n\r\n// Capture form submission for sending a message\r\ndocument.getElementById('chat-form').addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  \r\n  const message = document.getElementById('message').value;\r\n  const username = document.getElementById('username').value;\r\n  const room = 'public';  // You can modify this logic to handle room switching\r\n  \r\n  socket.emit('sendMessage', { username, message, room });\r\n\r\n  document.getElementById('message').value = '';\r\n});\r\n\r\n// Display messages\r\nsocket.on('receiveMessage', (data) => {\r\n  const messageContainer = document.getElementById('messages');\r\n  const messageElement = document.createElement('div');\r\n  \r\n  messageElement.innerHTML = `<strong>${data.username}</strong> (${data.time}): ${data.message}`;\r\n  messageContainer.appendChild(messageElement);\r\n  messageContainer.scrollTop = messageContainer.scrollHeight;  // Auto-scroll to the latest message\r\n});\r\n\r\n"]}